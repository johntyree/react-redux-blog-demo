{"version":3,"sources":["apis/jsonPlaceholder.js","actions/fetchPosts.js","actions/fetchUser.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/usersReducer.js","reducers/index.js","reducers/postsReducer.js","index.js"],"names":["axios","create","baseURL","_active_request","_active_requests","fetchUser","id","dispatch","a","jsonPlaceholder","get","response","type","payload","data","UserHeader","this","props","userId","user","className","name","React","Component","connect","state","ownProps","users","PostList","fetchPosts","posts","map","post","key","title","body","renderList","App","combineReducers","action","userInfo","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"0TAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCCPC,GAAkB,ECAhBC,EAAmB,GAEZC,EAAY,SAAAC,GAAE,8CAAI,WAAMC,GAAN,eAAAC,EAAA,0DACvBJ,EAAiBE,GADM,wDAI3BF,EAAiBE,IAAM,EAJI,SAKJG,EAAgBC,IAAhB,iBAA8BJ,IAL1B,OAKrBK,EALqB,OAM3BJ,EAAS,CAAEK,KAVW,aAUOC,QAASF,EAASG,cACxCV,EAAiBE,GAPG,2CAAJ,uDCDrBS,E,4LAGFC,KAAKC,MAAMZ,UAAUW,KAAKC,MAAMC,U,+BAGvB,IACDC,EAASH,KAAKC,MAAdE,KACR,OAAKA,EAGE,yBAAKC,UAAU,UAAUD,EAAKE,MAF5B,S,GATYC,IAAMC,WAoBhBC,eAJS,SAACC,EAAOC,GAC9B,MAAO,CAAEP,KAAMM,EAAME,MAAMD,EAASR,WAKpC,CAAEb,aAFWmB,CAGbT,GCtBIa,E,4LAGFZ,KAAKC,MAAMY,e,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKC,IAAKD,EAAK1B,GAAIc,UAAU,QAC3B,uBAAGA,UAAU,mCACb,yBAAKA,UAAU,uBACX,4BAAKY,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYjB,OAAQc,EAAKd,e,+BAO/B,OAAO,yBAAKE,UAAU,2BAA2BJ,KAAKoB,kB,GAtBnCd,IAAMC,WA+BdC,eAJS,SAAAC,GACtB,MAAO,CAAEK,MAAOL,EAAMK,MAAOH,MAAOF,EAAME,SAKzC,CAAEE,WHjCqB,yDAAM,WAAMtB,GAAN,eAAAC,EAAA,0DACxBL,EADwB,wDAI5BA,GAAkB,EAJU,SAKLM,EAAgBC,IAAI,UALf,OAKtBC,EALsB,OAM5BJ,EAAS,CAAEK,KAVY,cAUOC,QAASF,EAASG,OAChDX,GAAkB,EAPU,2CAAN,uDGiCTE,aAFFmB,CAGbI,GC7BaS,EARH,WACV,OACE,yBAAKjB,UAAU,gBACb,kBAAC,EAAD,Q,ilBCJS,ICEAkB,cAAgB,CAC7BR,MCHa,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIc,EAAW,uCACrC,MPDyB,gBOClBA,EAAO3B,KAAuB2B,EAAO1B,QAAUY,GDGtDE,MDJa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIc,EAAW,uCACrC,GJDwB,eICpBA,EAAO3B,KAAqB,CAC9B,IAAMM,EAASqB,EAAO1B,QAAQP,GACxBkC,EAAWD,EAAO1B,QACxB,OAAO,EAAP,GAAWY,EAAX,eAAmBP,EAASsB,IAE9B,OAAOf,KGEHgB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.c2a46b36.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com'\n});\n","import jsonPlaceholder from '../apis/jsonPlaceholder';\n\nexport const FETCH_POSTS = 'FETCH_POSTS';\n\nvar _active_request = false;\n\nexport const fetchPosts = () => async dispatch => {\n    if (_active_request) {\n      return;\n    }\n    _active_request = true;\n    const response = await jsonPlaceholder.get('/posts');\n    dispatch({ type: FETCH_POSTS, payload: response.data });\n    _active_request = false;\n};\n","import jsonPlaceholder from '../apis/jsonPlaceholder';\n\nexport const FETCH_USER = 'FETCH_USER';\n\nconst _active_requests = {};\n\nexport const fetchUser = id => async dispatch => {\n    if (_active_requests[id]) {\n      return\n    }\n    _active_requests[id] = true;\n    const response = await jsonPlaceholder.get(`/users/${id}`);\n    dispatch({ type: FETCH_USER, payload: response.data });\n    delete _active_requests[id];\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUser } from '../actions';\n\n\nclass UserHeader extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchUser(this.props.userId);\n  }\n\n  render () {\n    const { user } = this.props;\n    if (!user) {\n      return null;\n    }\n    return <div className=\"header\">{user.name}</div>;\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => { \n  return { user: state.users[ownProps.userId] }\n}\n\nexport default connect(\n  mapStateToProps,\n  { fetchUser }\n)(UserHeader);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts, fetchUser } from '../actions';\nimport UserHeader from './UserHeader';\n\n\nclass PostList extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  renderList() {\n    return this.props.posts.map(post => {\n      return (\n        <div key={post.id} className=\"item\" >\n          <i className=\"large middle aligned icon user\" />\n          <div className=\"content description\">\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n          </div>\n          <UserHeader userId={post.userId} />\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return { posts: state.posts, users: state.users };\n};\n\nexport default connect(\n    mapStateToProps,\n   { fetchPosts, fetchUser }\n)(PostList);\n","import React from 'react';\nimport PostList from './PostList';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n}\n\nexport default App;\n","import { FETCH_USER } from '../actions';\n\nexport default (state = {}, action) => {\n  if (action.type === FETCH_USER) {\n    const userId = action.payload.id;\n    const userInfo = action.payload;\n    return {...state, [userId]: userInfo };\n  }\n  return state\n}\n","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport usersReducer from './usersReducer';\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n});\n","import { FETCH_POSTS } from '../actions';\n\nexport default (state = [], action) => {\n  return action.type === FETCH_POSTS ? action.payload : state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}